<?php
# This file was automatically generated by the MediaWiki 1.24.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}

## UPO means: this is also a user preference option

$wgEnableEmail = false;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "apache@wiki.liquipedia.space";
$wgPasswordSender = "apache@wiki.liquipedia.space";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "localhost";
$wgDBname = "wiki.liquipedia.space";
$wgDBuser = "wiki";
$wgDBpassword = "bisubuild";

# MySQL specific settings
$wgDBprefix = "wikitest_";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=utf8";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = true;

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = array();

$wgSecretKey = "77d0ae934abf724494c73db35f0a7f1c709c9685f8b082960e54ac015277c910";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "3f5647058abb3cef";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "http://creativecommons.org/licenses/by-sa/3.0/";
$wgRightsText = "Creative Commons Attribution-ShareAlike";
$wgRightsIcon = "{$wgResourceBasePath}/resources/assets/licenses/cc-by-sa.png";

# Path to the GNU diff3 utility. Used for conflict resolution.

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['reviewer']['stablesettings'] = true;

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin('LiquiFlow');
$wgLiquiFlowAlphawiki = true;

# Enabled Extensions. Most extensions are enabled by including the base extension file here
# but check specific extension documentation for more details
# The following extensions were automatically enabled:
require_once "$IP/extensions/Cite/Cite.php";
require_once "$IP/extensions/ConfirmEdit/ConfirmEdit.php";
require_once "$IP/extensions/Gadgets/Gadgets.php";
require_once "$IP/extensions/ImageMap/ImageMap.php";
require_once "$IP/extensions/InputBox/InputBox.php";
require_once "$IP/extensions/Interwiki/Interwiki.php";
require_once "$IP/extensions/LocalisationUpdate/LocalisationUpdate.php";
require_once "$IP/extensions/Nuke/Nuke.php";
require_once "$IP/extensions/ParserFunctions/ParserFunctions.php";
require_once "$IP/extensions/Poem/Poem.php";
require_once "$IP/extensions/Renameuser/Renameuser.php";
require_once "$IP/extensions/SpamBlacklist/SpamBlacklist.php";
require_once "$IP/extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.php";
require_once "$IP/extensions/TitleBlacklist/TitleBlacklist.php";
require_once "$IP/extensions/WikiEditor/WikiEditor.php";
require_once("$IP/extensions/FlaggedRevs/FlaggedRevs.php");
require_once "$IP/extensions/SemanticMediaWiki/SemanticMediaWiki.php";
enableSemantics('http://wiki.liquipedia.space');
//require_once "$IP/extensions/SemanticResultFormats/SemanticResultFormats.php";
include_once "$IP/extensions/SemanticForms/SemanticForms.php";
require_once "$IP/extensions/Variables/Variables.php";
include_once( "$IP/extensions/PageSchemas/PageSchemas.php" );
require_once "$IP/extensions/MsUpload/MsUpload.php";
require_once "$IP/extensions/Arrays/Arrays.php";
require_once "$IP/extensions/DataValues/DataValues.php";
//require_once "$IP/extensions/ValveApi/ValveApi.php";

wfLoadExtension( 'TournamentsMenu' );
wfLoadExtension( 'TrendingMenu' );
wfLoadExtension( 'ContentAdbox' );
wfLoadExtension( 'ArticlesAsResources' );

# Added by Chapa
wfLoadExtension( 'CreateTeams' );

# End of automatically generated settings.
# Add more configuration options below.

$wgValveApiKey = '67A3CF623A160FFEBD1D7A224BA2489D';
$wgForeignFileRepos[] = array(
	'class' => 'ForeignDBRepo',
	'name' => 'focommons',
	'url' => "http://wiki.liquipedia.space/commons/images",
	'directory' => '/var/www/liquipedia.space/wiki.liquipedia.space/public/commons/images',
	'hashLevels' => 2, // This must be the same for the other family member
	'dbType' => $wgDBtype,
	'dbServer' => $wgDBserver,
	'dbUser' => "wiki",
	'dbPassword' => "bisubuild",
	'dbFlags' => DBO_DEFAULT,
	'dbName' => "wiki.liquipedia.space",
	'tablePrefix' => 'wiki2_',
	'hasSharedCache' => false,
	'descBaseUrl' => 'wiki.liquipedia.space/commons/index.php?title=File:',
	'fetchDescription' => true
);

$wgLBFactoryConf = array(
	'class' => 'LBFactoryMulti',
	'sectionsByDB' => array(
		'wiki.liquipedia.space' => 's1',
	),
	'sectionLoads' => array(
		's1' => array(
			'wiki.liquipedia.space' => 0,
		),
	),
	'hostsByName' => array(
		'wiki.liquipedia.space'	   => 'localhost',
	),
	'serverTemplate' => array(
		'dbname'	  => $wgDBname,
		'user'		  => $wgDBuser,
		'password'	  => $wgDBpassword,
		'type'		  => 'mysql',
		'flags'		  => DBO_DEFAULT,
		'max lag'	  => 30, 
	),
);

$wgLocalDatabases = array(
	'wiki.liquipedia.space-wikitest_',
	'wiki.liquipedia.space-wiki2_',
	'wiki.liquipedia.space-wiki3_',
);
$wgConf = new SiteConfiguration;
$wgConf->wikis = $wgLocalDatabases;
$wgConf->suffixes = $wgLocalDatabases;
$wgConf->siteParamsCallback = 'efGetSiteParams';
$wgConf->settings = array(
	'wgServer' => array(
		'default' => 'http://wiki.liquipedia.space',
	),
	'wgCanonicalServer' => array(
		'default' => 'http://wiki.liquipedia.space',
	),
	'wgScriptPath' => array(
		'default' => '/$wiki',
		'wiki.liquipedia.space-wikitest_' => '/starcraft2',
		'wiki.liquipedia.space-wiki2_' => '/commons',
		'wiki.liquipedia.space-wiki3_' => '/overwatch',
	),
	'wgArticlePath' => array(
		'default' => '/$wiki/$1',
		'wiki.liquipedia.space-wikitest_' => '/starcraft2/index.php?title=$1',
		'wiki.liquipedia.space-wiki2_' => '/commons/index.php?title=$1',
		'wiki.liquipedia.space-wiki3_' => '/overwatch/index.php?title=$1',
	),
	'wgSitename' => array(
		'default' => 'Liquipedia',
		'wiki.liquipedia.space-wikitest_' => 'FO StarCraft II',
		'wiki.liquipedia.space-wiki2_' => 'FO Commons',
		'wiki.liquipedia.space-wiki3_' => 'FO Overwatch',
	),
	'wgMetaNamespace' => array(
		'default' => 'Liquipedia',
		'wiki.liquipedia.space-wikitest_' => 'FOs_testwiki',
		'wiki.liquipedia.space-wiki2_' => 'FO Commons',
		'wiki.liquipedia.space-wiki3_' => 'FO Overwatch',
	),
	'wgLanguageCode' => array(
		'default' => 'en',
	),
	'wgDefaultSkin' => array(
		'default' => 'LiquiFlow',
	),
	'wgEnableUploads' => array(
		'default' => false,
		'wiki.liquipedia.space-wiki2_' => true,
	),
	'wgUseImageMagick' => array(
		'default' => true,
	),
	'wgImageMagickConvertCommand' => array(
		'default' => '/usr/bin/convert',
	),
	'wgUseInstantCommons' => array(
		'default' => false,
	),
	'wgShellLocale' => array(
		'default' => 'en_US.utf8',
	),
	'wgCacheDirectory' => array(
		'default' => false,
	),
	'wgDiff3' => array(
		'default' => '/usr/bin/diff3',
	),
	'wgScriptExtension' => array(
		'default' => '.php',
	),
	'$wgStylePath' => array(
		'default' => '$wgScriptPath/skins',
		'wiki.liquipedia.space-wikitest_' => '/starcraft2/skins',
		'wiki.liquipedia.space-wiki2_' => '/commons/skins',
		'wiki.liquipedia.space-wiki3_' => '/overwatch/skins',
	),
	'wgLogo' => array(
		'default' => '/starcraft2/skins/LiquiFlow/images/liquipedia_logo.png',
	),
	'wgShowExceptionDetails' => array(
		'default' => true,
	),
);
$wgConf->extractAllGlobals('wiki.liquipedia.space-wikitest_');

function efGetSiteParams( $conf, $wiki ) {
	$site = null;
	$lang = null;
	foreach( $conf->suffixes as $suffix ) {
		if ( substr( $wiki, -strlen( $suffix ) ) == $suffix ) {
			$site = $suffix;
			$lang = substr( $wiki, 0, -strlen( $suffix ) );
			break;
		}
	}
	$ret = array(
		'suffix' => $site,
		'lang' => $lang,
		'params' => array(
			'lang' => $lang,
			'site' => $site,
			'wiki' => $wiki,
		),
		'tags' => array(),
	);
	return $ret;
}


wfLoadExtension( 'GlobalUsage' );
$wgGlobalUsageDatabase = 'wiki.liquipedia.space-wiki2_';
$wgGlobalUsageSharedRepoWiki = 'wiki.liquipedia.space-wiki2_';

$wgUploadNavigationUrl = '//wiki.liquipedia.space/commons/index.php?title=Special:Upload';

wfLoadExtension( 'MobilePreview' );
wfLoadExtension( 'MediaWiki-div-tables' );
wfLoadExtension( 'liquiflow-adbox' );

$wgGroupPermissions['sysop']['interwiki'] = true;

# Enables use of WikiEditor by default but still allows users to disable it in preferences
$wgDefaultUserOptions['usebetatoolbar'] = 1;
# Enables link and table wizards by default but still allows users to disable them in preferences
$wgDefaultUserOptions['usebetatoolbar-cgd'] = 1;
# Displays the Preview and Changes tabs
$wgDefaultUserOptions['wikieditor-preview'] = 0;
# Displays the Publish and Cancel buttons on the top right side
$wgDefaultUserOptions['wikieditor-publish'] = 1;